services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - project_default

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://34.64.208.105:9093
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_CREATE_TOPICS: "kafka-logs:1:1,error-logs:1:1"
    depends_on:
      - zookeeper
    networks:
      - project_default

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.4
    container_name: elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - xpack.security.authc.api_key.enabled=true
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - bootstrap.memory_lock=true
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.keystore.type=JKS
      - xpack.security.transport.ssl.keystore.path=elasticsearch.jks
      - xpack.security.transport.ssl.truststore.type=JKS
      - xpack.security.transport.ssl.truststore.path=elastic-stack-ca.jks
      - xpack.security.transport.ssl.truststore.secure_password=${TRUSTSTORE_PASSWORD}
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.keystore.type=JKS
      - xpack.security.http.ssl.keystore.path=elasticsearch.jks
      - xpack.security.http.ssl.truststore.type=JKS
      - xpack.security.http.ssl.truststore.path=elastic-stack-ca.jks
      - xpack.security.http.ssl.truststore.secure_password=${TRUSTSTORE_PASSWORD}
      - ingest.geoip.downloader.enabled=true
      - KIBANA_SYSTEM_PASSWORD=Ccenter123456!
      - xpack.license.self_generated.type=basic
      - xpack.security.authc.token.enabled=true
      - ES_JAVA_OPTS=-Xms4g -Xmx4g -Djava.security.egd=file:/dev/urandom
      - "node.store.allow_mmap=false"
      - ELASTIC_USERNAME=elastic
      - KEYSTORE_PASSWORD=${KEYSTORE_PASSWORD}
      - TRUSTSTORE_PASSWORD=${TRUSTSTORE_PASSWORD}
    volumes:
      - ./elasticsearch.jks:/usr/share/elasticsearch/config/elasticsearch.jks
      - ./elastic-stack-ca.jks:/usr/share/elasticsearch/config/elastic-stack-ca.jks
      - /dev/urandom:/dev/random
      - es-data:/usr/share/elasticsearch/data
      - token-volume:/usr/share/elasticsearch/config
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - project_default

  logstash:
    image: docker.elastic.co/logstash/logstash:8.10.4
    container_name: logstash
    user: root
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./elastic-stack-ca.jks:/usr/share/logstash/config/elastic-stack-ca.jks
      - ./logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./logstash.jks:/usr/share/logstash/config/logstash.jks
    ports:
      - "5000:5000"
      - "9600:9600"
    environment:
      ELASTICSEARCH_HOSTS: "https://elasticsearch:9200"
      ELASTICSEARCH_USER: "elastic"
      ELASTICSEARCH_PASSWORD: "${ELASTICSEARCH_PASSWORD}"
      LOGSTASH_KEYSTORE_PATH: "/usr/share/logstash/config/logstash.jks"
      LOGSTASH_KEYSTORE_PASSWORD: "${LOGSTASH_KEYSTORE_PASSWORD}"
      LOGSTASH_KEYSTORE_TYPE: "JKS"
      LS_JAVA_OPTS: "-Djavax.net.ssl.trustStore=/usr/share/logstash/config/elastic-stack-ca.jks -Djavax.net.ssl.trustStorePassword=${TRUSTSTORE_PASSWORD}"
    depends_on:
      elasticsearch:
        condition: service_healthy
      kafka:
        condition: service_started
    networks:
      - project_default

  kibana:
    image: docker.elastic.co/kibana/kibana:8.10.4
    container_name: kibana
    environment:
      ELASTICSEARCH_HOSTS: https://elasticsearch:9200
      ELASTICSEARCH_USERNAME: kibana_system
      ELASTICSEARCH_PASSWORD: ${KIBANA_SYSTEM_PASSWORD}
      ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES: /usr/share/kibana/config/elastic-stack-ca.jks
      ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES_PASSWORD: ${TRUSTSTORE_PASSWORD}
      ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES_TYPE: JKS
      SERVER_SSL_KEYSTORE_PATH: /usr/share/kibana/config/kibana.jks
      SERVER_SSL_KEYSTORE_PASSWORD: ${KIBANA_KEYSTORE_PASSWORD}
      SERVER_SSL_KEYSTORE_TYPE: JKS
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - project_default

  springboot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: springboot
    ports:
      - "443:443"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://zigzag-database.cnkq8ww86ffm.ap-northeast-2.rds.amazonaws.com:3306/zigzagDB
      SPRING_DATASOURCE_USERNAME: Kang
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      SPRING_ELASTICSEARCH_REST_URIS: https://elasticsearch:9200
      SPRING_ELASTICSEARCH_REST_SSL_TRUST_STORE: /app/elastic-stack-ca.jks
      SPRING_ELASTICSEARCH_REST_SSL_TRUST_STORE_PASSWORD: ${TRUSTSTORE_PASSWORD}
      SPRING_ELASTICSEARCH_REST_SSL_TRUST_STORE_TYPE: JKS
      SPRING_ELASTICSEARCH_REST_SSL_KEY_STORE: /app/projectkkk.jks
      SPRING_ELASTICSEARCH_REST_SSL_KEY_STORE_PASSWORD: ${KEYSTORE_PASSWORD}
      SERVER_SSL_ENABLED: true
      SERVER_SSL_KEY_STORE: /app/projectkkk.jks
      SERVER_SSL_KEY_STORE_PASSWORD: changeit
      SERVER_SSL_KEY_STORE_TYPE: JKS
      SERVER_PORT: 443
    depends_on:
      elasticsearch:
        condition: service_healthy
      kafka:
        condition: service_started
    volumes:
      - ./projectkkk.jks:/app/projectkkk.jks:ro
      - ./elastic-stack-ca.jks:/app/elastic-stack-ca.jks:ro
    networks:
      - project_default

volumes:
  elasticsearch-data:
  kibana-data:
  token-volume:
  es-data:

networks:
  project_default:
    external: true
